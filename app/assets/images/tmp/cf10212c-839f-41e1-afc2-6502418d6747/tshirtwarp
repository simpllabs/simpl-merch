#!/bin/bash
# 
# Developed by Fred Weinhaus 11/11/2014 .......... revised 7/25/2017
#
# ------------------------------------------------------------------------------
# 
# Licensing:
# 
# Copyright Â© Fred Weinhaus
# 
# My scripts are available free of charge for non-commercial use, ONLY.
# 
# For use of my scripts in commercial (for-profit) environments or 
# non-free applications, please contact me (Fred Weinhaus) for 
# licensing arrangements. My email address is fmw at alink dot net.
# 
# If you: 1) redistribute, 2) incorporate any of these scripts into other 
# free applications or 3) reprogram them in another scripting language, 
# then you must contact me for permission, especially if the result might 
# be used in a commercial or for-profit environment.
# 
# My scripts are also subject, in a subordinate manner, to the ImageMagick 
# license, which can be found at: http://www.imagemagick.org/script/license.php
# 
# ------------------------------------------------------------------------------
# 
####
#
# USAGE: tshirtwarp lightingfile displacementfile infile backgroundfile outfile
# 
# infile is the image to be placed onto the tshirt
# backgroundfile is the tshirt image
# lighting file and displacement file are generated by the script tshirt with 
# the -E option.
# 
# 
###
# 
# NAME: TSHIRTWARP 
# 
# PURPOSE: To apply an image to a region of of a tshirt image using a lighting
# file, a displacement map and arguments provided by the script tshirt.
# 
# DESCRIPTION: TSHIRTWARP applies an image to a region of a tshirt image 
# using a lighting file, a displacement map and arguments provided by the 
# script tshirt. The arguments must be copied from the tshirt script output 
# at the terminal and pasted in the arguments section of this script.
# 
# REQUIREMENTS: IM 6.3.6-0 due to the use of the current control point 
# ordering. Also requires the preprocessing of the tshirt script in export 
# mode (-E) to get the lighting image (lighting.png), the displacement image 
# (displace.png) and to get the needed internal arguments that must be pasted 
# in this script below.
# 
# CAVEAT: No guarantee that this script will work on all platforms, 
# nor that trapping of inconsistent parameters is complete and 
# foolproof. Use At Your Own Risk. 
# 
######
# 

#### set internal arguments here (pasted from the output of tshirt script)

coordinates="0,0 349,294 299,0 648,294 299,281 648,575 0,281 349,575"
antialias="2"
sharpen="1"
displace="10"
modulating=""
compose="hardlight"
 

#### end internal arguments

# get external arguments
lfile="$1"			# lighting image
dfile="$2"			# dispacement image
infile="$3"			# input image
bgfile="$4"			# optional background image or if no background image then output image
outfile="$5"		# output image

# test that lfile provided
if [ "$lfile" = "" ]; then 
	echo "INSUFFICIENT NUMBER OF FILES SPECIFIED"
	exit 1
fi

# test that dfile provided
if [ "$dfile" = "" ]; then 
	echo "INSUFFICIENT NUMBER OF FILES SPECIFIED"
	exit 1
fi

# test that infile provided
if [ "$infile" = "" ]; then 
	echo "INSUFFICIENT NUMBER OF FILES SPECIFIED"
	exit 1
fi

# test that bgfile provided
if [ "$bgfile" = "" ]; then 
	echo "INSUFFICIENT NUMBER OF FILES SPECIFIED"
	exit 1
fi

# test that outfile provided
if [ "$outfile" = "" ]; then
	echo "INSUFFICIENT NUMBER OF FILES SPECIFIED"
	exit 1
fi

# set directory for temporary files
tmpdir="/tmp"

dir="$tmpdir/TSHIRT.$$"
mkdir "$dir" || {
  echo >&2 "UNABLE TO CREATE WORKING DIR \"$dir\" -- ABORTING"
  exit 10
}
trap "rm -rf $dir;" 0
trap "rm -rf $dir; exit 1" 1 2 3 10 15
trap "rm -rf $dir; exit 1" ERR


# read lfile image
if ! convert -quiet "$lfile" +repage $dir/tmpL.miff; then
	echo "--- FILE $lfile DOES NOT EXIST OR IS NOT AN ORDINARY FILE, NOT READABLE OR HAS ZERO SIZE ---"
	exit 1
fi	

# read dfile image
if ! convert -quiet "$dfile" +repage $dir/tmpD.miff; then
	echo "--- FILE $dfile DOES NOT EXIST OR IS NOT AN ORDINARY FILE, NOT READABLE OR HAS ZERO SIZE ---"
	exit 1
fi	

# read infile image
if ! convert -quiet "$infile" +repage $modulating $dir/tmpI.miff; then
	echo "--- FILE $infile DOES NOT EXIST OR IS NOT AN ORDINARY FILE, NOT READABLE OR HAS ZERO SIZE ---"
	exit 1
fi	

# read bgfile (tshirt) image
if ! convert -quiet "$bgfile" +repage $dir/tmpT.miff; then
	echo "--- FILE $infile DOES NOT EXIST OR IS NOT AN ORDINARY FILE, NOT READABLE OR HAS ZERO SIZE ---"
	exit 1
fi	

im_version=`convert -list configure | \
	sed '/^LIB_VERSION_NUMBER /!d; s//,/;  s/,/,0/g;  s/,0*\([0-9][0-9]\)/\1/g' | head -n 1`

if [ "$im_version" -ge "07000000" ]; then
	identifying="magick identify"
else
	identifying="identify"
fi


# test if tshirt/bgfile has alpha. If so remove and save for later.
is_alpha=`$identifying -verbose $bgfile | grep "Alpha" | head -n 1`
[ "$is_alpha" != "" ] && convert $dir/tmpT.miff -alpha extract -blur 0x$antialias -level 50x100% $dir/tmpA.miff


# set up for sharpening
if [ "$sharpen" != "0" ]; then
	sproc="-unsharp 0x$sharpen -clamp"
else
	sproc=""
fi

# set up swapping for -C over
if [ "$compose" = "over" ]; then
	swapping="+swap"
else
	swapping=""
fi


# process image

if [ "$is_alpha" != "" ]; then
	# line2 1-3:   process overlay image to perspective transform with transparent
	#              background the size of the tshirt image and sharpen
	# lines 4-6:   apply lighting image 
	# lines 7-8:   apply displacement image
	# lines 9-11:  composite transformed overlay image onto tshirt image 
	#              and add back alpha channel
	# note: IM 7 needs -respect-parenthesis to that -compose copy_opacity following tmpL works properly, 
	# but IM 6 does not.
	convert -respect-parenthesis \( $dir/tmpT.miff -alpha transparent \) \
		\( $dir/tmpI.miff -virtual-pixel none +distort perspective "$coordinates" $sproc \) \
		-background none -layers merge +repage \
		\
		\( -clone 0 -alpha extract \) \
		\( -clone 0 $dir/tmpL.miff $swapping -compose $compose -composite \) \
		-delete 0 +swap -compose over -alpha off -compose copy_opacity -composite \
		\
		$dir/tmpD.miff \
		-define compose:args=-$displace,-$displace -compose displace -composite \
		\
		$dir/tmpT.miff +swap -compose over -composite \
		$dir/tmpA.miff -alpha off -compose copy_opacity -composite "$outfile"

else
	# line2 1-3:   process overlay image to perspective transform with transparent
	#              background the size of the tshirt image and sharpen
	# lines 4-6:   apply lighting image 
	# lines 7-8:   apply displacement image
	# line 9:      composite transformed overlay image onto tshirt image 
	convert -respect-parenthesis \( $dir/tmpT.miff -alpha transparent \) \
		\( $dir/tmpI.miff -virtual-pixel none +distort perspective "$coordinates" $sproc \) \
		-background none -layers merge +repage \
		\
		\( -clone 0 -alpha extract \) \
		\( -clone 0 $dir/tmpL.miff $swapping -compose $compose -composite \) \
		-delete 0 +swap -compose over -alpha off -compose copy_opacity -composite \
		\
		$dir/tmpD.miff \
		-define compose:args=-$displace,-$displace -compose displace -composite \
		\
		$dir/tmpT.miff +swap -compose over -composite "$outfile"
fi

exit 0
